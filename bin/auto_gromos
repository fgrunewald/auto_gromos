#!/usr/bin/env python3

# Copyright 2020 University of Groningen
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""
Perform the parsing and input redirect for the
different subcommands. This is the main executable.
"""
import os
import argparse
from pathlib import Path
from auto_gromos import (DATA_PATH, gen_bonded_interactions)

VERSION = 'auto_gromos version {}'.format(auto_gromos.__version__)

def main():
    """
    Parses commandline arguments and call relevant sub_programs.
    """
    parser = argparse.ArgumentParser(
        formatter_class=argparse.ArgumentDefaultsHelpFormatter,
    )

    parser.add_argument('-V', '--version', action='version', version=VERSION)

    parser.add_argument('-name', required=True, type=str, dest="name",
                         help="name of the final molecule")

    file_group = parser_gen_itp.add_argument_group('input and output options')
    file_group.add_argument('-lib', dest='lib', required=False, type=str,
                            help='force-fields to include from library', nargs='*')
    file_group.add_argument('-f', dest='inpath', required=False, type=Path,
                            help='Input file ()', nargs="*")
    file_group.add_argument('-o', dest='outpath', type=Path,
                            help='Output ITP (ITP)')

     # Load Input
     force_field = ForceField("gromos")

     with open("blocks.ff", "r") as _file:
       lines = _file.readlines()

     read_ff(lines, force_field)

     with open("gromos2016H66_links.ff", "r") as _file:
        lines = _file.readlines()

     read_ff(lines, force_field)

     for link in molecule.force_field.links:
         delete_atomname(link)

     mol = gen_bonded_interactions(mol)

     with open("test.itp", 'w') as outpath:
           vermouth.gmx.itp.write_molecule_itp(mol, outpath,
                                             moltype="test", header=["polyply-itp"])


if __name__ == '__main__':
    main()
